<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx 
   		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--读取db.properties -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--数据库驱动 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!--连接数据库的url -->
		<property name="url" value="${jdbc.url}" />
		<!--连接数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!--连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!--最大连接数 -->
		<property name="maxTotal" value="${jdbc.maxTotal}" />
		<!--最大空闲连接 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!--初始化连接数 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
	</bean>

	<!-- 事务管理器，依赖于数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
     
    <!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/> 	
     
      	<!--配置MyBatis工厂 -->  
    <bean id="sqlSessionFactory" 
            class="org.mybatis.spring.SqlSessionFactoryBean">
             <!--注入数据源 -->
         <property name="dataSource" ref="dataSource" />
         <!--指定核心配置文件位置 -->
   		<property name="configLocation" value="classpath:mybatis-config.xml"/>
   </bean>
      	
      	
      	<!-- 扫描包 -->
        <context:component-scan base-package="com.zyj.ssm"/>
        
		<!-- 配置mapper扫描器 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.zyj.ssm" />
		</bean>
        
      <!--   把Admin这个类交给spring管理	
        <bean class="com.zyj.ssm.pojo.Admin" name = "admin">
        		
        </bean>
        
        <bean class="com.zyj.ssm.dao.AdminDao" name = "dao" autowire="byName" />
        	 -->
        	 
       
        <bean class="com.zyj.ssm.util.SSMAscpect" id="ascpect"/>
      <bean class="com.zyj.ssm.dao.AdminDao" autowire="byName" name="dao"/>

	<!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="NESTED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="modify*" propagation="NESTED"
				rollback-for="Exception" />
			<tx:method name="edit*" propagation="NESTED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="NESTED" rollback-for="Exception" />
			<tx:method name="send*" propagation="NESTED" rollback-for="Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="count*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	-->
	
    <!-- 配置AOP切面
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.zyj.ssm.dao.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config> -->
        
        <!-- AOP的配置 -->
    	<aop:config>
     		<aop:aspect ref="ascpect">
     			<!--对哪些类 哪些方法进行切入  -->
     			<aop:pointcut expression="execution(* com.zyj.ssm.service.AdminService.*(..))" id="myPointCut"/>
     			<aop:before method="before" pointcut-ref="myPointCut"/>
     			<aop:after method="after" pointcut-ref="myPointCut"/>
     		</aop:aspect>
   	 	</aop:config>
   	 	
   
</beans>